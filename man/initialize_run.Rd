% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runs.R
\name{initialize_run}
\alias{initialize_run}
\title{Initialize training run directory}
\usage{
initialize_run(run_dir = NULL, runs_dir = "runs", quiet = FALSE)
}
\arguments{
\item{run_dir}{Path to run directory (\code{NULL} to automatically create a
timestamped directory within the \code{runs_dir})}

\item{runs_dir}{Parent directory for runs}

\item{quiet}{\code{FALSE} to prevent printing the path to the run dir}
}
\description{
Timestamped directory for storing training/logging data in a separate
location for each training run.
}
\details{
The \code{initialize_run()} function establishes a unique run directory (by default
in a sub-directory named "runs") and stores it's value for saving various
artifacts of training (e.g. model checkpoints, tensorflow logs, etc.).

If you utilize the automatic creation of run directories within the "runs"
directory then you can use the \code{latest_run()} and \code{latest_runs()} functions
to get the path(s) to the most recently created run directories and the
\code{clean_runs()} function to remove previously created run directories.
}
\note{
You can also establish a run directory by defining the
\code{TENSORFLOW_RUN_DIR} environment variable (this is technically equivalent
to calling \code{initialize_run()} within an R script).
}
\examples{
\dontrun{
library(tfruns)
run_dir <- initialize_run()
}

}
